<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Attosecond Ray Tracing on </title>
    <link>//localhost:1313/</link>
    <description>Recent content in Attosecond Ray Tracing on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpticalChainList</title>
      <link>//localhost:1313/usage/mainargs/opticalchainlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/usage/mainargs/opticalchainlist/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Summary&lt;/h4&gt;&#xA;&#xA;    Use the &lt;code&gt;OEPlacement()&lt;/code&gt; function on a list of optical elements, a &lt;code&gt;SourceProperties&lt;/code&gt; dictionnary, a list of distances and a list of incidence angles.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;explanation&#34;&gt;Explanation&lt;/h2&gt;&#xA;&lt;p&gt;The first argument of &lt;code&gt;main()&lt;/code&gt; is &lt;code&gt;OpticalChainList&lt;/code&gt;, a complete description of the optical setup that needs to be simulated. This includes the absolute positions and orientations of all the optical elements apart from the detector.&lt;/p&gt;&#xA;&lt;p&gt;Positionning these elements in 3D space by hand would be unnecessarily complicated. Instead, a utility function &lt;code&gt;OEPlacement()&lt;/code&gt; has been written to allow you to automatically position these elements, provided you specify the distances between them and the incidence angle on each element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installation</title>
      <link>//localhost:1313/usage/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/usage/installation/</guid>
      <description>&lt;p&gt;The code is split into two Python packages:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;AttosecondRayTracing-core&lt;/code&gt; that provides the &lt;code&gt;ARTcore&lt;/code&gt; module. It contains the actual ray-tracing code, the definitions of the mirrors, sources and detectors.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AttosecondRayTracing&lt;/code&gt; that provides the &lt;code&gt;ART&lt;/code&gt; module and requires &lt;code&gt;AttosecondRayTracing-core&lt;/code&gt; as a dependency. It contains the plotting and visualisation functions as well as the analsysis functions. It&amp;rsquo;s the most user-facing part of the codebase.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Unless you really only need the functionality of &lt;code&gt;AttosecondRayTracing-core&lt;/code&gt;, we recommend installing &lt;code&gt;AttosecondRayTracing&lt;/code&gt; that will pull in the required dependencies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SourceProperties</title>
      <link>//localhost:1313/usage/mainargs/sourceproperties/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/usage/mainargs/sourceproperties/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Summary&lt;/h4&gt;&#xA;&#xA;    &lt;code&gt;SourceProperties&lt;/code&gt; is a python dictionnary&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Running the simulation requires describing the light source. The properties that need to be defined are the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;DeltaFT&amp;quot;&lt;/code&gt;: This is not actually a property of the light source. Indeed, in the simulation, all photons are considered to be emitted simultaneously in an infinitely short burst. This parameter is actually an analysis parameter, used to check whether the light rays after the optical system have a short enough temporal spread.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;Wavelength&amp;quot;&lt;/code&gt;: Similarly to &lt;code&gt;DeltaFT&lt;/code&gt;, this is actually an analysis parameter that is used as a reference for the spatial spread of the light rays after the optical system. It can however be used in the future to make wavelength-dependent optics such as gratings.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;Divergence&amp;quot;&lt;/code&gt;: This is an actual propertany of the light source: it&amp;rsquo;s the half-angle of the cone of light emitted by the source as illustrated below.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;SourceSize&amp;quot;&lt;/code&gt;: Again, a property of the light source. It&amp;rsquo;s the diameter of the light source (considered to be a disc). If the light source is a point source, it should be set to 0.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;NumberRays&amp;quot;&lt;/code&gt;: The number of rays that the light source will cast and that will be used for the simulation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/api/pointsource.svg&#34; alt=&#34;Illustration of divergence of light source&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two identical toroidals in same plane of incidence</title>
      <link>//localhost:1313/examples/config_2toroidals_f-x-f/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/examples/config_2toroidals_f-x-f/</guid>
      <description>&lt;p&gt;This example configuration describes a refocusing setup comprised of two identical toroidal mirrors with a focal length of 500 and an angle of incidence of 80Â°. The beam from a point source is first cut to 35mrad by a circular mask, it then impacts the first toroidal mirror positionned one focal length away from the source. A second toroidal mirror is positionned at a variable distance away from the first one. The script will iterate over that distance to try to find the one that minimises the image focal spot size.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Usage</title>
      <link>//localhost:1313/usage/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/usage/usage/</guid>
      <description>&lt;p&gt;Before starting, we strongly recommend checking out the &#xA;&lt;a href=&#34;//localhost:1313/../conventions&#34; title=&#34;conventions&#34;&gt;conventions&lt;/a&gt;&#xA; we use in ART.&lt;/p&gt;&#xA;&lt;p&gt;The entry point into the program is the &lt;code&gt;main()&lt;/code&gt; function found in the &lt;code&gt;ARTmain.py&lt;/code&gt; file. It has five arguments, one of which is optional:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;OpticalChainList&lt;/code&gt;: An &lt;code&gt;OpticalChainList&lt;/code&gt; object containing all the optical elements to be simulated with their positions as well as a list of initial source rays.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SourceProperties&lt;/code&gt;: A &lt;code&gt;dict&lt;/code&gt; of the properties of the source that will be used for the light simulation&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;DetectorOptions&lt;/code&gt;: A &lt;code&gt;dict&lt;/code&gt; describing the position of the light ray detector or the parameters allowing it to be auto-positionned.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AnalysisOptions&lt;/code&gt;: A &lt;code&gt;dict&lt;/code&gt; specifying which plots to display and their options.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;save_file_name&lt;/code&gt; (optional): A file name for saving the raw data to be analysed later.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Thus, running the program requires constructing these objects and calling &lt;code&gt;main()&lt;/code&gt;. There are two ways to do so:&lt;/p&gt;</description>
    </item>
    <item>
      <title>DetectorOptions</title>
      <link>//localhost:1313/usage/mainargs/detectoroptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/usage/mainargs/detectoroptions/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Summary&lt;/h4&gt;&#xA;&#xA;    &lt;code&gt;DetectorOptions&lt;/code&gt; is a python dictionnary&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The detector is a virtual plane of infinite size which plays the role of a CCD. It can be positionned manually by specifying the position of a point on the detector and its normal vector. However, in the case of ART it made sense to make the positionning of the detector part of the main functionality of the code. Thus, the &lt;code&gt;main()&lt;/code&gt; function accepts the &lt;code&gt;DetectorOptions&lt;/code&gt; argument. This object allows the code to automatically position the virtual detection plane in the optimal spot. It&amp;rsquo;s a Python dictionnary with the following possible attributes:&lt;/p&gt;</description>
    </item>
    <item>
      <title>AnalysisOptions</title>
      <link>//localhost:1313/usage/mainargs/analysisoptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/usage/mainargs/analysisoptions/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Summary&lt;/h4&gt;&#xA;&#xA;    &lt;code&gt;AnalysisOptions&lt;/code&gt; is a python dictionnary&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;DefaultAnalysisOptions&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;verbose&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# print intermediate results and info in the console?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_Render&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# render optical elements and rays, and how many rays to render?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;maxRaysToRender&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;150&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;DrawAiryAndFourier&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Draw Airy spot and Fourier-limited duration in the following plots?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_SpotDiagram&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram without color coding the spots?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_DelaySpotDiagram&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram with ray delays color coded?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_IntensitySpotDiagram&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram with ray intensities color coded?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_IncidenceSpotDiagram&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram with ray incidence angles color coded?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_DelayGraph&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram with delays in 3rd dimension?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_IntensityGraph&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram with delays in 3rd dimension and ray intensities color coded?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_IncidenceGraph&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce an interactive spot diagram with delays in 3rd dimension and ray incidence angles color coded?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_DelayMirrorProjection&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce a plot of the ray delays at the detector projected onto the mirror surface?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_IntensityMirrorProjection&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce a plot of the ray intensities at the detector projected onto the mirror surface?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;plot_IncidenceMirrorProjection&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# produce a plot of the ray incidence angles at the detector projected onto the mirror surface?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;save_results&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# save the simulation results to disk, to analyse later&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OEPointsToRender&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OEPointsScale&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Conventions</title>
      <link>//localhost:1313/conventions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/conventions/</guid>
      <description>&lt;p&gt;In the ART code, we use some conventions. In order to obtain the expected results, please use those conventions.&lt;/p&gt;&#xA;&lt;h3 id=&#34;units&#34;&gt;Units&lt;/h3&gt;&#xA;&lt;p&gt;The distances in ART are in &lt;em&gt;millimeters&lt;/em&gt;.&#xA;The angles are stored and calculated in &lt;em&gt;radians&lt;/em&gt;, but for input/output, they are converted to &lt;em&gt;degrees&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;incidence-planes&#34;&gt;Incidence planes&lt;/h3&gt;&#xA;&lt;p&gt;The default incidence plane is \((\vec{x},\vec{z} )\), with \(\vec{z}\) being the default propagation direction. All elements are created by default with a &#xA;&lt;a href=&#34;#normal&#34; title=&#34;normal&#34;&gt;normal&lt;/a&gt;&#xA; vector pointing towards positive \(\vec{z}\). For a horizontal incidence plane, this means that \(\vec{y}\) is the vertical axis.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>//localhost:1313/addons-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/addons-api/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>//localhost:1313/modified-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/modified-api/</guid>
      <description></description>
    </item>
  </channel>
</rss>
